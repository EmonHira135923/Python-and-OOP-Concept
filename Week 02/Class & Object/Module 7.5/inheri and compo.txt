‚úÖ Inheritance (‡¶â‡¶§‡ßç‡¶§‡¶∞‡¶æ‡¶ß‡¶ø‡¶ï‡¶æ‡¶∞):
‡¶∏‡¶Ç‡¶ú‡ßç‡¶û‡¶æ:
Inheritance ‡¶π‡¶≤‡ßã ‡¶è‡¶Æ‡¶® ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏ (Child/Subclass) ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶∞ (Parent/Superclass) ‡¶ó‡ßÅ‡¶£‡¶æ‡¶¨‡¶≤‡¶ø ‡¶ì ‡¶Æ‡ßá‡¶•‡¶° ‡¶â‡¶§‡ßç‡¶§‡¶∞‡¶æ‡¶ß‡¶ø‡¶ï‡¶æ‡¶∞‡¶∏‡ßÇ‡¶§‡ßç‡¶∞‡ßá ‡¶™‡¶æ‡ßü‡•§

üß† ‡¶Æ‡¶®‡ßá ‡¶∞‡¶æ‡¶ñ‡ßã: "is-a" ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï ‡¶¨‡ßã‡¶ù‡¶æ‡¶§‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶π‡ßü‡•§

üîπ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£:
python
Copy
Edit
class Animal:
    def sound(self):
        print("Animal sound")

class Dog(Animal):  # Inheritance
    def sound(self):
        print("Bark")

d = Dog()
d.sound()  # Output: Bark
‚û°Ô∏è ‡¶è‡¶ñ‡¶æ‡¶®‡ßá Dog ‡¶π‡¶≤‡ßã Animal ‡¶è‡¶∞ ‡¶ö‡¶æ‡¶á‡¶≤‡ßç‡¶° ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡•§ ‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé Dog is an Animal.

‚úÖ Composition (‡¶∏‡¶Ç‡¶Ø‡ßã‡¶ú‡¶®):
‡¶∏‡¶Ç‡¶ú‡ßç‡¶û‡¶æ:
Composition ‡¶π‡¶≤‡ßã ‡¶è‡¶Æ‡¶® ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡ßå‡¶∂‡¶≤ ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏ ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶∞ ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶Ö‡¶Ç‡¶∂ ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá‚Äî‡¶Æ‡¶æ‡¶®‡ßá ‡¶è‡¶ï‡ßá ‡¶Ö‡¶™‡¶∞‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶ú‡ßã‡ßú‡¶æ ‡¶≤‡ßá‡¶ó‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá‡•§

üß† ‡¶Æ‡¶®‡ßá ‡¶∞‡¶æ‡¶ñ‡ßã: "has-a" ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï ‡¶¨‡ßã‡¶ù‡¶æ‡¶§‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶π‡ßü‡•§

üîπ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£:
python
Copy
Edit
class Engine:
    def start(self):
        print("Engine started")

class Car:
    def __init__(self):
        self.engine = Engine()  # Composition

    def start_car(self):
        self.engine.start()

c = Car()
c.start_car()  # Output: Engine started
‚û°Ô∏è ‡¶è‡¶ñ‡¶æ‡¶®‡ßá Car ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá Engine ‡¶Ü‡¶õ‡ßá‡•§ ‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé Car has an Engine.

‚úÖ Inheritance vs Composition: ‡¶§‡ßÅ‡¶≤‡¶®‡¶æ ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá

‡¶™‡¶æ‡¶∞‡ßç‡¶•‡¶ï‡ßç‡¶Ø	Inheritance	Composition
‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï	is-a (‡¶è‡¶ï‡¶ü‡¶ø ‡¶Ü‡¶∞‡ßá‡¶ï‡¶ü‡¶ø‡¶∞ ‡¶ß‡¶∞‡¶®)	has-a (‡¶è‡¶ï‡¶ü‡¶ø ‡¶Ü‡¶∞‡ßá‡¶ï‡¶ü‡¶ø‡¶ï‡ßá ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶ï‡¶∞‡ßá)
‡¶®‡¶Æ‡¶®‡ßÄ‡ßü‡¶§‡¶æ	‡¶ï‡¶Æ (tight coupling)	‡¶¨‡ßá‡¶∂‡¶ø (loose coupling)
‡¶™‡ßÅ‡¶®‡¶É‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞	‡¶™‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶∞ ‡¶ï‡ßã‡¶° reuse ‡¶ï‡¶∞‡ßá	‡¶Ö‡¶®‡ßç‡¶Ø ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏‡ßá‡¶∞ ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá
‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞	‡¶∏‡¶æ‡¶¨‡¶ï‡ßç‡¶≤‡¶æ‡¶∏ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶§‡ßá	‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü‡¶ï‡ßá ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ü‡ßç‡¶∞‡¶ø‡¶¨‡¶ø‡¶â‡¶ü ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶∞‡¶æ‡¶ñ‡¶§‡ßá
‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶∏‡¶π‡¶ú‡¶§‡¶æ	‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡¶æ ‡¶ï‡¶†‡¶ø‡¶®	‡¶¨‡ßá‡¶∂‡¶ø ‡¶∏‡¶π‡¶ú‡ßá ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶®‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø
