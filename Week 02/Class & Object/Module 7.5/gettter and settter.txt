 Getter ржПржмржВ Setter ржХрзА?
ЁЯФ╣ Getter:
Getter рж╣рж▓рзЛ ржПржоржи ржПржХржЯрж┐ ржорзЗржержб ржпрж╛ ржХрзЛржирзЛ ржкрзНрж░рж╛ржЗржнрзЗржЯ ржнрзЗрж░рж┐рзЯрзЗржмрж▓рзЗрж░ ржорж╛ржи ржкрзЬрждрзЗ (get ржХрж░рждрзЗ) ржмрзНржпржмрж╣рзГржд рж╣рзЯред

ЁЯФ╣ Setter:
Setter рж╣рж▓рзЛ ржПржоржи ржПржХржЯрж┐ ржорзЗржержб ржпрж╛ ржХрзЛржирзЛ ржкрзНрж░рж╛ржЗржнрзЗржЯ ржнрзЗрж░рж┐рзЯрзЗржмрж▓рзЗрж░ ржорж╛ржи ржкрж░рж┐ржмрж░рзНрждржи (set ржХрж░рждрзЗ) ржмрзНржпржмрж╣рзГржд рж╣рзЯред

ЁЯУМ ржПржЧрзБрж▓рзЛ рж╕рж╛ржзрж╛рж░ржгржд encapsulation ржорзЗржирзЗ ржбрзЗржЯрж╛ ржирж┐рж░рж╛ржкржж рж░рж╛ржЦрждрзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯред

тЬЕ Python ржП Getter ржПржмржВ Setter ржПрж░ ржЙржжрж╛рж╣рж░ржг:
python
Copy
Edit
class Student:
    def __init__(self):
        self.__name = ""   # ржкрзНрж░рж╛ржЗржнрзЗржЯ ржнрзЗрж░рж┐рзЯрзЗржмрж▓

    # Getter method
    def get_name(self):
        return self.__name

    # Setter method
    def set_name(self, new_name):
        self.__name = new_name

# ржЕржмржЬрзЗржХрзНржЯ рждрзИрж░рж┐
s = Student()

# Setter ржжрж┐рзЯрзЗ ржирж╛ржо рж╕рзЗржЯ ржХрж░рж╛
s.set_name("Tanvir")

# Getter ржжрж┐рзЯрзЗ ржирж╛ржо ржкрзЬрж╛
print(s.get_name())   # Output: Tanvir
тЬЕ рж╕ржВржХрзНрж╖рзЗржкрзЗ ржоржирзЗ рж░рж╛ржЦрзЛ:

ржмрж┐рж╖рзЯ	Getter	Setter
ржХрж╛ржЬ	ржнрзЗрж░рж┐рзЯрзЗржмрж▓рзЗрж░ ржорж╛ржи ржкрзЬрзЗ	ржнрзЗрж░рж┐рзЯрзЗржмрж▓рзЗрж░ ржорж╛ржи ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзЗ
ржирж╛ржорзЗрж░ ржзрж░ржи	get_...()	set_...()
ржкрзНрж░рзЯрзЛржЬржи	ржбрзЗржЯрж╛ рж░рж┐ржб ржХрж░рж╛рж░ ржЬржирзНржп	ржбрзЗржЯрж╛ ржЖржкржбрзЗржЯ ржХрж░рж╛рж░ ржЬржирзНржп